/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 14 11:52:27 GMT 2017
 */

package io.protostuff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.protostuff.ByteArrayInput;
import io.protostuff.CodedInput;
import io.protostuff.GraphByteArrayInput;
import io.protostuff.Schema;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraphByteArrayInput_ESTest extends GraphByteArrayInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0, 6);
      Object object0 = new Object();
      boolean boolean0 = graphByteArrayInput0.isInitialized(object0);
      assertFalse(graphByteArrayInput0.isCurrentMessageReference());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, (byte)0, (byte)0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0, (byte)61);
      Schema<CodedInput> schema0 = (Schema<CodedInput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      int int0 = graphByteArrayInput0.readFieldNumber(schema0);
      assertEquals(0, int0);
      assertFalse(graphByteArrayInput0.isCurrentMessageReference());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      byteArray0[1] = (byte)106;
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, (byte)0, (byte)0, true);
      ByteArrayInput byteArrayInput1 = byteArrayInput0.setBounds((byte)0, (byte)106);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput1, (byte)61);
      byteArrayInput0.readRawVarint64();
      Schema<CodedInput> schema0 = (Schema<CodedInput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      int int0 = graphByteArrayInput0.readFieldNumber(schema0);
      assertEquals(2, byteArrayInput1.currentOffset());
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)127;
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0, 6);
      Schema<ByteArrayInput> schema0 = (Schema<ByteArrayInput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      int int0 = graphByteArrayInput0.readFieldNumber(schema0);
      assertEquals(1, byteArrayInput0.currentOffset());
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)102;
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, (byte)0, 4471, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0);
      byteArrayInput0.readRawVarint64();
      Schema<CodedInput> schema0 = (Schema<CodedInput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      int int0 = graphByteArrayInput0.readFieldNumber(schema0);
      assertEquals(3, byteArrayInput0.currentOffset());
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, 6, 0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0, 1);
      // Undeclared exception!
      try { 
        graphByteArrayInput0.updateLast(byteArrayInput0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
