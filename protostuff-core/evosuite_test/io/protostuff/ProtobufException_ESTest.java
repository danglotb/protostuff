/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 14 11:24:01 GMT 2017
 */

package io.protostuff;

import org.junit.Test;
import static org.junit.Assert.*;
import io.protostuff.ProtobufException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProtobufException_ESTest extends ProtobufException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProtobufException protobufException0 = ProtobufException.misreportedSize();
      ProtobufException protobufException1 = ProtobufException.sizeLimitExceeded();
      Throwable throwable0 = protobufException1.initCause(protobufException0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: Protocol message was too large.  May be malicious.  Use CodedInput.setSizeLimit() to increase the size limit.", throwable0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ProtobufException protobufException0 = ProtobufException.recursionLimitExceeded();
      String string0 = protobufException0.getLocalizedMessage();
      assertEquals("Protocol message had too many levels of nesting.  May be malicious.  Use CodedInput.setRecursionLimit() to increase the depth limit.", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ProtobufException protobufException0 = ProtobufException.invalidEndTag();
      String string0 = protobufException0.getLocalizedMessage();
      assertEquals("Protocol message end-group tag did not match expected tag.", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ProtobufException protobufException0 = ProtobufException.negativeSize();
      String string0 = protobufException0.getMessage();
      assertEquals("CodedInput encountered an embedded string or message which claimed to have negative size.", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ProtobufException protobufException0 = ProtobufException.misreportedSize();
      String string0 = protobufException0.toString();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: CodedInput encountered an embedded string or bytes that misreported its size.", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ProtobufException protobufException0 = ProtobufException.truncatedMessage();
      String string0 = protobufException0.getMessage();
      assertEquals("While parsing a protocol message, the input ended unexpectedly in the middle of a field.  This could mean either than the input has been truncated or that an embedded message misreported its own length.", string0);
  }
}
