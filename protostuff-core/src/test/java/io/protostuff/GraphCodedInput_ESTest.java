/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 20 09:40:40 GMT 2017
 */

package io.protostuff;

import org.evosuite.shaded.org.mockito.Matchers;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.protostuff.ByteArrayInput;
import io.protostuff.CodedInput;
import io.protostuff.GraphCodedInput;
import io.protostuff.Schema;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraphCodedInput_ESTest extends GraphCodedInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      CodedInput codedInput0 = new CodedInput(byteArray0, (byte) (-120), (byte) (-1), true);
      GraphCodedInput graphCodedInput0 = new GraphCodedInput(codedInput0);
      Integer integer0 = new Integer((byte) (-44));
      Schema<Integer> schema0 = (Schema<Integer>) mock(Schema.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(schema0).isInitialized(Matchers.<Integer>any());
      // Undeclared exception!
      try { 
        graphCodedInput0.mergeObject(integer0, schema0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.protostuff.GraphCodedInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CodedInput codedInput0 = new CodedInput((byte[]) null, 545, 545, true);
      GraphCodedInput graphCodedInput0 = new GraphCodedInput(codedInput0, 545);
      // Undeclared exception!
      try { 
        graphCodedInput0.handleUnknownField(0, (Schema<GraphCodedInput>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.protostuff.CodedInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CodedInput codedInput0 = new CodedInput((byte[]) null, 545, 545, true);
      GraphCodedInput graphCodedInput0 = new GraphCodedInput(codedInput0, 545);
      codedInput0.reset();
      int int0 = graphCodedInput0.readFieldNumber((Schema<ByteArrayInput>) null);
      assertEquals(0, int0);
      assertFalse(graphCodedInput0.isCurrentMessageReference());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[1];
      CodedInput codedInput0 = new CodedInput(pipedInputStream0, byteArray0, (byte)3, 2857, true);
      GraphCodedInput graphCodedInput0 = new GraphCodedInput(codedInput0);
      // Undeclared exception!
      try { 
        graphCodedInput0.updateLast((Object) null, pipedInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
