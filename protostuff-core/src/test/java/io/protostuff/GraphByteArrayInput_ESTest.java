/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 13 14:59:33 GMT 2017
 */

package io.protostuff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import io.protostuff.ByteArrayInput;
import io.protostuff.CodedInput;
import io.protostuff.GraphByteArrayInput;
import io.protostuff.LowCopyProtostuffOutput;
import io.protostuff.Schema;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraphByteArrayInput_ESTest extends GraphByteArrayInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0);
      Schema<LowCopyProtostuffOutput> schema0 = (Schema<LowCopyProtostuffOutput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      graphByteArrayInput0.handleUnknownField((int) 1, schema0);
      assertEquals(1, byteArrayInput0.currentOffset());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)77;
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0, (byte)77);
      int int0 = graphByteArrayInput0.readFieldNumber((Schema<CodedInput>) null);
      assertEquals(1, byteArrayInput0.currentOffset());
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)87;
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0);
      int int0 = graphByteArrayInput0.readFieldNumber((Schema<CodedInput>) null);
      assertEquals(1, byteArrayInput0.currentOffset());
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)70;
      ByteArrayInput byteArrayInput0 = new ByteArrayInput(byteArray0, true);
      GraphByteArrayInput graphByteArrayInput0 = new GraphByteArrayInput(byteArrayInput0, (byte)70);
      int int0 = graphByteArrayInput0.readFieldNumber((Schema<CodedInput>) null);
      assertEquals(2, byteArrayInput0.currentOffset());
      assertEquals(8, int0);
  }
}
