/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 20 09:56:22 GMT 2017
 */

package io.protostuff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.protostuff.GraphProtostuffOutput;
import io.protostuff.LinkedBuffer;
import io.protostuff.ProtostuffOutput;
import io.protostuff.Schema;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraphProtostuffOutput_ESTest extends GraphProtostuffOutput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GraphProtostuffOutput graphProtostuffOutput0 = new GraphProtostuffOutput((ProtostuffOutput) null);
      GraphProtostuffOutput graphProtostuffOutput1 = new GraphProtostuffOutput((ProtostuffOutput) null, 3);
      Schema<GraphProtostuffOutput> schema0 = (Schema<GraphProtostuffOutput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        graphProtostuffOutput0.writeObject(1067, graphProtostuffOutput1, schema0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.protostuff.GraphProtostuffOutput", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedBuffer linkedBuffer0 = new LinkedBuffer(6);
      ProtostuffOutput protostuffOutput0 = new ProtostuffOutput(linkedBuffer0);
      GraphProtostuffOutput graphProtostuffOutput0 = new GraphProtostuffOutput(protostuffOutput0);
      Schema<ProtostuffOutput> schema0 = (Schema<ProtostuffOutput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      graphProtostuffOutput0.writeObject(512, protostuffOutput0, schema0, false);
      Schema<ProtostuffOutput> schema1 = (Schema<ProtostuffOutput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      graphProtostuffOutput0.writeObject(256, protostuffOutput0, schema1, false);
      assertEquals(7, protostuffOutput0.getSize());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedBuffer linkedBuffer0 = new LinkedBuffer(326);
      ProtostuffOutput protostuffOutput0 = new ProtostuffOutput(linkedBuffer0);
      GraphProtostuffOutput graphProtostuffOutput0 = new GraphProtostuffOutput(protostuffOutput0, 512);
      Schema<ProtostuffOutput> schema0 = (Schema<ProtostuffOutput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      graphProtostuffOutput0.writeObject(512, protostuffOutput0, schema0, false);
      Schema<ProtostuffOutput> schema1 = (Schema<ProtostuffOutput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      graphProtostuffOutput0.writeObject(512, protostuffOutput0, schema1, false);
      byte[] byteArray0 = new byte[1];
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      LinkedBuffer linkedBuffer0 = new LinkedBuffer(byteArray0, (byte)0);
      ProtostuffOutput protostuffOutput0 = new ProtostuffOutput(linkedBuffer0);
      GraphProtostuffOutput graphProtostuffOutput0 = null;
      try {
        graphProtostuffOutput0 = new GraphProtostuffOutput(protostuffOutput0, (-1855));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expectedMaxSize is negative: -1855
         //
         verifyException("io.protostuff.GraphProtostuffOutput$IdentityMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ProtostuffOutput protostuffOutput0 = null;
      int int0 = 0;
      GraphProtostuffOutput graphProtostuffOutput0 = new GraphProtostuffOutput((ProtostuffOutput) null, 0);
      int int1 = 31;
      Schema<ProtostuffOutput> schema0 = (Schema<ProtostuffOutput>) mock(Schema.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        graphProtostuffOutput0.writeObject(31, (ProtostuffOutput) null, schema0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.protostuff.GraphProtostuffOutput", e);
      }
  }
}
